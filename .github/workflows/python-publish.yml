name: Build SharifConnect

on:
  push:
    tags:
      - "v*.*.*"   
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build executable
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            pyinstaller --noconfirm --onefile --windowed \
              --name "SharifConnect" main.py \
              --hidden-import=qasync \
              --add-data "static;static" \
              --add-data ".env;." \
              --icon=static/images/SharifConnect.ico
          elif [[ "${{ runner.os }}" == "Linux" ]]; then
            pyinstaller --noconfirm --onefile \
              --name "SharifConnect" main.py \
              --hidden-import=qasync \
              --add-data "static:static" \
              --add-data ".env:." 
          else
            pyinstaller --noconfirm --onefile --windowed \
              --name "SharifConnect" main.py \
              --hidden-import=qasync \
              --add-data "static:static" \
              --add-data ".env:."
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: SharifConnect-${{ runner.os }}
          path: dist/**

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
